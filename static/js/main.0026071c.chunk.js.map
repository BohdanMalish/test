{"version":3,"sources":["components/Employee/Employee.module.css","components/Employees/Employees.selector.js","ducks/employees.js","components/EmployeesBirthday/EmployeesBirthday.jsx","components/Employee/Employee.jsx","components/Employees/Employees.jsx","App.jsx","reportWebVitals.js","store/index.js","index.js","components/EmployeesBirthday/EmployeesBirthday.module.css","components/Employees/Employees.module.css"],"names":["module","exports","employeesSelector","createSelector","state","employeesReducer","employees","RECEIVED_EMPLOYEES","loadEmployees","dispatch","fetch","then","response","json","data","type","payload","receivedEmployees","initialState","reducer","action","EmployeesBirthday","listIds","useSelector","selector","getValidDate","date","Date","month","toLocaleString","year","day","renderEmployeesBirthday","employeesIds","JSON","parse","window","localStorage","getItem","list","forEach","element","employee","id","push","sortedList","filter","dob","monthName","sort","a","b","lastName","length","className","styles","map","firstName","listIDSprot","index","Employee","changeListId","useState","active","setActive","useEffect","employeesId","handleChangeCheckbox","e","idEmployee","employeesList","concat","setItem","stringify","changeLocalStorage","target","value","style","backgroundColor","color","checked","onChange","alphabet","Employees","useDispatch","listId","setListId","renderEmployees","letter","filteredList","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0026071c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"employee\":\"Employee_employee__3JYsn\"};","import { createSelector } from 'reselect';\n\nconst employeesSelector = createSelector(\n  (state) => state.employeesReducer,\n  (employees) => (employees ? employees : [])\n);\n\nexport default employeesSelector;\n","const RECEIVED_EMPLOYEES = '/employees/received_photo';\n\nconst receivedEmployees = (data) => ({\n  type: RECEIVED_EMPLOYEES,\n  payload: data\n});\n\nexport const loadEmployees = () => (dispatch) => {\n  fetch(`https://yalantis-react-school-api.yalantis.com/api/task0/users`)\n    .then((response) => response.json())\n    .then((data) => dispatch(receivedEmployees(data)));\n};\n\nconst initialState = {\n  employees: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVED_EMPLOYEES:\n      return {\n        ...state,\n        employees: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport selector from '../Employees/Employees.selector';\nimport styles from './EmployeesBirthday.module.css';\n\nconst EmployeesBirthday = ({ listIds }) => {\n  const months = [\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    ' December',\n    'January',\n    'February',\n    'March',\n    'April'\n  ];\n  const { employees } = useSelector(selector);\n\n  const getValidDate = (data) => {\n    const date = new Date(data);\n    const month = date.toLocaleString('en', { month: 'long' });\n    const year = date.toLocaleString('en', { year: 'numeric' });\n    const day = date.toLocaleString('en', { day: 'numeric' });\n\n    return `${day} ${month}, ${year} year`;\n  };\n\n  const renderEmployeesBirthday = (month) => {\n    const employeesIds = JSON.parse(window.localStorage.getItem('employees'));\n    const employeesListId = employeesIds ? employeesIds : [];\n    let list = [];\n\n    employeesListId.forEach((element) => {\n      employees.forEach((employee) => {\n        if (employee.id === element) {\n          list.push(employee);\n        }\n      });\n    });\n\n    const filteredList = list?.filter(({ dob }) => {\n      const date = new Date(dob);\n      const monthName = date.toLocaleString('en', { month: 'long' });\n      if (month === monthName) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n\n    const sortedList = filteredList.sort((a, b) => {\n      if (a.lastName < b.lastName) {\n        return -1;\n      } else {\n        return 1;\n      }\n    });\n\n    if (sortedList.length > 0) {\n      return (\n        <div className={styles['ebirthday-month']}>\n          <div className={styles['Name-of-month']}>{month}</div>\n          {sortedList.map((employee) => (\n            <div key={`${employee.id}birth`}>\n              {employee.lastName} {employee.firstName} -{' '}\n              {getValidDate(employee.dob)}\n            </div>\n          ))}\n        </div>\n      );\n    } else {\n      return;\n    }\n  };\n  const listIDSprot = JSON.parse(window.localStorage.getItem('employees'));\n\n  return (\n    <div className={styles['ebirthday']}>\n      <div className={styles['ebirthday-title']}>Employees Birthday</div>\n      <div className={styles['ebirthday-months']}>\n        {listIDSprot?.length === 0 ? (\n          <div className={styles['ebirtday-empty']}>\n            Employees List is empty\n          </div>\n        ) : (\n          months.map((month, index) => (\n            <div key={index}>{renderEmployeesBirthday(month)}</div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeesBirthday;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Employee.module.css';\n\nconst Employee = ({ employee, changeListId }) => {\n  const { firstName, lastName, id } = employee;\n\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    const employeesId = JSON.parse(window.localStorage.getItem('employees'));\n    const employeesIdList = employeesId ? employeesId : [];\n    employeesIdList.forEach((element) => {\n      if (element === id) {\n        setActive(true);\n      }\n    });\n  }, [id]);\n\n  const changeLocalStorage = (idEmployee) => {\n    const employees = JSON.parse(window.localStorage.getItem('employees'));\n    changeListId(employees);\n\n    const employeesList = employees ? employees : [];\n    const list = !active\n      ? employeesList.concat([idEmployee])\n      : employees.filter((id) => id !== idEmployee);\n\n    window.localStorage.setItem('employees', JSON.stringify(list));\n  };\n\n  const handleChangeCheckbox = (e) => {\n    changeLocalStorage(e.target.value);\n    setActive(!active);\n  };\n\n  return (\n    <div\n      className={styles['employee']}\n      style={{\n        backgroundColor: active ? 'white' : 'black',\n        color: active ? '' : 'white'\n      }}\n    >\n      <div className={styles['employee-lastname']}>\n        <div className={styles['employee-name']}>\n          <div className={styles['employee-lastname']}>{lastName}</div>\n          <div className={styles['employee-firstname']}>{firstName}</div>\n        </div>\n        <div>\n          <input\n            className={styles['not-active']}\n            type=\"checkbox\"\n            checked={!active}\n            value={id}\n            onChange={handleChangeCheckbox}\n          />\n          not active\n        </div>\n        <div>\n          <input\n            className={styles['active']}\n            type=\"checkbox\"\n            checked={active}\n            value={id}\n            onChange={handleChangeCheckbox}\n          />\n          active\n        </div>\n      </div>\n    </div>\n  );\n};\n\nEmployee.propTypes = {\n  employee: PropTypes.object.isRequired,\n  changeListId: PropTypes.func.isRequired\n};\n\nexport default Employee;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport selector from './Employees.selector';\nimport { loadEmployees } from '../../ducks/employees';\n\nimport EmployeesBirthday from '../EmployeesBirthday/EmployeesBirthday';\nimport Employee from '../Employee/Employee';\nimport styles from './Employees.module.css';\n\nconst alphabet = [\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z'\n];\n\nconst Employees = () => {\n  const dispatch = useDispatch();\n  const { employees } = useSelector(selector);\n  const [listId, setListId] = useState([]);\n\n  useEffect(() => {\n    dispatch(loadEmployees());\n\n    const employeesId = JSON.parse(window.localStorage.getItem('employees'));\n    const employeesIdList = employeesId ? employeesId : [];\n\n    setListId(employeesIdList);\n  }, [dispatch]);\n\n  const renderEmployees = (letter) => {\n    const filteredList = employees?.filter(\n      ({ lastName }) => lastName[0] === letter\n    );\n    if (filteredList?.length > 0) {\n      const sortedList = filteredList.sort((a, b) => {\n        if (a.lastName < b.lastName) {\n          return -1;\n        } else {\n          return 1;\n        }\n      });\n      return sortedList.map((employee) => (\n        <Employee\n          changeListId={setListId}\n          key={employee.id}\n          employee={employee}\n        />\n      ));\n    } else {\n      return <div className={styles['empty-letter']}>-</div>;\n    }\n  };\n\n  return (\n    <div className={styles['employees']}>\n      <div className={styles['employees-page']}>\n        <div className={styles['employees-title']}>Employees</div>\n        <div className={styles['employees-letters']}>\n          {alphabet.map((letter, index) => (\n            <div key={index}>\n              <div className={styles['employees-letter']}>{letter}</div>\n              {renderEmployees(letter)}\n            </div>\n          ))}\n        </div>\n      </div>\n      <EmployeesBirthday listIds={listId} />\n    </div>\n  );\n};\n\nexport default Employees;\n","import Employees from './components/Employees/Employees';\n\nfunction App() {\n  return <Employees />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport employees from '../ducks/employees';\n\nconst rootReducer = combineReducers({\n  employeesReducer: employees\n});\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nconst store = createStore(\n  rootReducer,\n  {},\n  composeEnhancers(applyMiddleware(thunkMiddleware))\n);\n\nexport default store;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport store from './store/index';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ebirthday-month\":\"EmployeesBirthday_ebirthday-month__1gamS\",\"ebirthday\":\"EmployeesBirthday_ebirthday__3q3kk\",\"ebirthday-title\":\"EmployeesBirthday_ebirthday-title__1WIVw\",\"ebirtday-empty\":\"EmployeesBirthday_ebirtday-empty__3oUok\",\"Name-of-month\":\"EmployeesBirthday_Name-of-month__1kThD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employees\":\"Employees_employees__1RdCI\",\"employees-page\":\"Employees_employees-page__1aHe2\",\"employees-letters\":\"Employees_employees-letters__2cE9g\",\"employees-letter\":\"Employees_employees-letter__2keUe\",\"employees-title\":\"Employees_employees-title__2X6oc\",\"empty-letter\":\"Employees_empty-letter__1xs_1\"};"],"sourceRoot":""}